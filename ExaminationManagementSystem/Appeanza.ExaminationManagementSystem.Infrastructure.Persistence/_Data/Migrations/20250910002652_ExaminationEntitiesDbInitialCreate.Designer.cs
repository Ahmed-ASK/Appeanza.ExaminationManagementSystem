// <auto-generated />
using System;
using Appeanza.ExaminationManagementSystem.Infrastructure.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appeanza.ExaminationManagementSystem.Infrastructure.Persistence.Data.Migrations
{
    [DbContext(typeof(ExaminationDbContext))]
    [Migration("20250910002652_ExaminationEntitiesDbInitialCreate")]
    partial class ExaminationEntitiesDbInitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<bool>("IsRightAnswer")
                        .HasColumnType("BIT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME")
                        .HasComputedColumnSql("SYSUTCDATETIME()");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.Property<int>("TimeInminutes")
                        .HasColumnType("INT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Exam", t =>
                        {
                            t.HasCheckConstraint("CK_Exam_Status", "[Status] >= 0 AND [Status] <= 4");
                        });
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<decimal>("Marks")
                        .HasColumnType("DECIMAL(4,2)");

                    b.Property<int>("QuestionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.StudentsExams", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<DateTime>("SubmitAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME")
                        .HasComputedColumnSql("SYSUTCDATETIME()");

                    b.HasKey("UserId", "ExamId");

                    b.HasIndex("ExamId");

                    b.ToTable("StudentsExams");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME")
                        .HasComputedColumnSql("SYSUTCDATETIME()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.StudentGroup", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME")
                        .HasComputedColumnSql("SYSUTCDATETIME()");

                    b.HasKey("StudentId", "GroupId");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("StudentGroup");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Answer", b =>
                {
                    b.HasOne("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Exam", b =>
                {
                    b.HasOne("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.Group", "Group")
                        .WithMany("Exams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Question", b =>
                {
                    b.HasOne("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.StudentsExams", b =>
                {
                    b.HasOne("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Exam", "Exam")
                        .WithMany("SubmittedExams")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.StudentGroup", b =>
                {
                    b.HasOne("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.Group", "Group")
                        .WithOne("StudentGroup")
                        .HasForeignKey("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.StudentGroup", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Exam", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("SubmittedExams");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Exams.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Appeanza.ExaminationManagementSystem.Domain.Entities.Groups.Group", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("StudentGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
